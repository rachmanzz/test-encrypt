{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","EncryptorApp","classes","useState","isDescrypt","setDescrypt","getText","setText","getPhrase","setPhrase","getResult","setResult","encryptor","Encryptor","Container","component","maxWidth","CssBaseline","className","Typography","variant","TextField","required","fullWidth","label","value","onChange","event","target","autoFocus","FormControlLabel","control","Checkbox","color","checked","Button","type","onClick","decrypt","encrypt","error","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qeAYMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,MAAO,CACLC,UAAWF,EAAMG,QAAQ,GACzBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEdC,OAAQ,CACNC,OAAQR,EAAMG,QAAQ,GACtBM,gBAAiBT,EAAMU,QAAQC,UAAUC,MAE3CC,KAAM,CACJC,MAAO,OACPZ,UAAWF,EAAMG,QAAQ,IAE3BY,OAAQ,CACNP,OAAQR,EAAMG,QAAQ,EAAG,EAAG,QAIjB,SAASa,IACtB,IAAMC,EAAUnB,IADqB,EAEHoB,oBAAS,GAFN,mBAE9BC,EAF8B,KAElBC,EAFkB,OAGVF,mBAAS,IAHC,mBAG9BG,EAH8B,KAGrBC,EAHqB,OAINJ,mBAAS,IAJH,mBAI9BK,EAJ8B,KAInBC,EAJmB,OAKNN,mBAAS,IALH,mBAK9BO,EAL8B,KAKnBC,EALmB,KAM/BC,EAAU,IAAIC,IAcpB,OACE,eAACC,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,KAArC,UACE,cAACC,EAAA,EAAD,IACA,sBAAKC,UAAWhB,EAAQhB,MAAxB,UACE,cAACiC,EAAA,EAAD,CAAYJ,UAAU,KAAKK,QAAQ,KAAnC,uBAGA,gCACE,cAACC,EAAA,EAAD,CACED,QAAQ,WACR3B,OAAO,SACP6B,UAAQ,EACRC,WAAS,EACTC,MAAM,OACNC,MAAOnB,EACPoB,SAAU,SAACC,GAAYpB,EAAQoB,EAAMC,OAAOH,QAC5CI,WAAS,IAEX,cAACR,EAAA,EAAD,CACED,QAAQ,WACR3B,OAAO,SACP6B,UAAQ,EACRC,WAAS,EACTE,MAAOjB,EACPgB,MAAM,UACNE,SAAU,SAACC,GAAYlB,EAAUkB,EAAMC,OAAOH,UAEhD,cAACJ,EAAA,EAAD,CACED,QAAQ,WACR3B,OAAO,SACP6B,UAAQ,EACRC,WAAS,EACTC,MAAM,SACNC,MAAOf,IAET,cAACoB,EAAA,EAAD,CACEC,QAAS,cAACC,EAAA,EAAD,CAAUP,MAAM,WAAWQ,MAAM,UAAUP,SAAU,SAACC,GAAYtB,EAAYsB,EAAMC,OAAOM,YACpGV,MAAM,eAER,cAACW,EAAA,EAAD,CACEC,KAAK,SACLb,WAAS,EACTH,QAAQ,YACRa,MAAM,UACNf,UAAWhB,EAAQF,OACnBqC,QAzDU,WAClB,IAEI1B,EADEP,EACQQ,EAAU0B,QAAQhC,EAASE,GAE3BI,EAAU2B,QAAQjC,EAASE,IAEvC,MAAOgC,GACP7B,EAAUP,EAAa,gCAAkC,8BA2CrD,SAQGA,EAAa,WAAa,qBCnGvC,IAYeqC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e3c1c87f.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Encryptor from 'encryptor-js';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function EncryptorApp() {\n  const classes = useStyles();\n  const [isDescrypt, setDescrypt] = useState(false)\n  const [getText, setText] = useState(\"\")\n  const [getPhrase, setPhrase] = useState(\"\")\n  const [getResult, setResult] = useState(\"\")\n  const encryptor=new Encryptor()\n\n  const handleClick = () => {\n    try {\n      if (isDescrypt) {\n        setResult(encryptor.decrypt(getText, getPhrase))\n      } else {\n        setResult(encryptor.encrypt(getText, getPhrase))\n      }\n    } catch (error) {\n      setResult(isDescrypt ? \"Can`t Descrypt encrypted text\" : \"Can`t encrypt plain text\")\n    }\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Typography component=\"h1\" variant=\"h5\">\n          Encryptor\n        </Typography>\n        <div>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            label=\"Text\"\n            value={getText}\n            onChange={(event) => { setText(event.target.value) }}\n            autoFocus\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            value={getPhrase}\n            label=\"Phrases\"\n            onChange={(event) => { setPhrase(event.target.value) }}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            label=\"Result\"\n            value={getResult}\n          />\n          <FormControlLabel\n            control={<Checkbox value=\"descrypt\" color=\"primary\" onChange={(event) => { setDescrypt(event.target.checked) }} />}\n            label=\"descrypt ?\"\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={handleClick}\n          >\n            {isDescrypt ? \"Descrypt\" : \"Encrypt\"}\n          </Button>\n        </div>\n      </div>\n    </Container>\n  );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}